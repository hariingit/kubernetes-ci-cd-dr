pipeline {
    agent any
    stages {
        stage('Deploy to Green') {
            steps {
                // Deploy to green environment
                sh 'kubectl apply -f green-deployment.yaml'
            }
        }
        stage('Patch Ingress') {
            steps {
                // Patch ingress resource
               sh 'kubectl patch ingress/my-app-ingress --type=merge --patch-file patch.json'
        }
        stage('Switch Traffic to Green') {
            steps {
                // Update ingress resource to point to green service
                sh 'kubectl patch ingress/my-app-ingress -p \'{"patch": [{"op": "replace", "path": "/spec/rules/0/http/paths/0/backend/service/name", "value": "green-service"}, {"op": "replace", "path": "/spec/rules/0/http/paths/0/backend/service/port", "value": 80}]}\''
            }
        }
        stage('Verify Green') {
            steps {
                // Verify green environment is working correctly
                sh 'kubectl get deployments -l environment=green'
            }
        }
        stage('Rollback to Blue') {
            steps {
                // Update ingress resource to point to blue service
                sh 'kubectl patch ingress/my-app-ingress -p \'{"patch": [{"op": "replace", "path": "/spec/rules/0/http/paths/0/backend/service/name", "value": "blue-service"}, {"op": "replace", "path": "/spec/rules/0/http/paths/0/backend/service/port", "value": 80}]}\''
            }
        }
    }
}
